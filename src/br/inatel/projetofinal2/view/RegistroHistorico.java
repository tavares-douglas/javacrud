/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.inatel.projetofinal2.view;
import br.inatel.projetofinal2.model.Historico;
import br.inatel.projetofinal2.modelDAO.HistoricoDAO;
import br.inatel.projetofinal2.modelDAO.PacienteDAO;
import javax.swing.JOptionPane;


/**
 *
 * @author gabri
 */
public class RegistroHistorico extends javax.swing.JFrame {

    /** Creates new form RegistroHistorico */
    public RegistroHistorico() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelHistorico = new javax.swing.JPanel();
        fumantePaciente = new javax.swing.JCheckBox();
        alcoolPaciente = new javax.swing.JCheckBox();
        cpfPaciente = new javax.swing.JLabel();
        campoCpf = new javax.swing.JFormattedTextField();
        idHistorico = new javax.swing.JLabel();
        massaPaciente = new javax.swing.JLabel();
        alturaPaciente = new javax.swing.JLabel();
        tipoSanguineoPaciente = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        campoMassa = new javax.swing.JFormattedTextField();
        campoAltura = new javax.swing.JFormattedTextField();
        campoTipoSanguineo = new javax.swing.JTextField();
        botaoSalvar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelHistorico.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true), "Histórico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 18))); // NOI18N

        fumantePaciente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        fumantePaciente.setText("Fumante");
        fumantePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fumantePacienteActionPerformed(evt);
            }
        });

        alcoolPaciente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        alcoolPaciente.setText("Consome álcool");

        cpfPaciente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cpfPaciente.setText("CPF:");

        try {
            campoCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        idHistorico.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        idHistorico.setText("ID:");

        massaPaciente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        massaPaciente.setText("Massa:");

        alturaPaciente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        alturaPaciente.setText("Altura:");

        tipoSanguineoPaciente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tipoSanguineoPaciente.setText("Tipo Sanguíneo:");

        try {
            campoMassa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##,###kg")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            campoAltura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#,##m")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        botaoSalvar.setBackground(new java.awt.Color(255, 255, 255));
        botaoSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoCancelar.setBackground(new java.awt.Color(255, 255, 255));
        botaoCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelHistoricoLayout = new javax.swing.GroupLayout(painelHistorico);
        painelHistorico.setLayout(painelHistoricoLayout);
        painelHistoricoLayout.setHorizontalGroup(
            painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelHistoricoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelHistoricoLayout.createSequentialGroup()
                        .addComponent(botaoSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(botaoCancelar))
                    .addGroup(painelHistoricoLayout.createSequentialGroup()
                        .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fumantePaciente)
                            .addComponent(alcoolPaciente)
                            .addGroup(painelHistoricoLayout.createSequentialGroup()
                                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tipoSanguineoPaciente)
                                    .addComponent(alturaPaciente)
                                    .addComponent(massaPaciente)
                                    .addComponent(idHistorico)
                                    .addComponent(cpfPaciente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoTipoSanguineo)
                                    .addComponent(campoAltura)
                                    .addComponent(campoMassa)
                                    .addComponent(campoId)
                                    .addComponent(campoCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelHistoricoLayout.setVerticalGroup(
            painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelHistoricoLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfPaciente)
                    .addComponent(campoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idHistorico)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(massaPaciente)
                    .addComponent(campoMassa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alturaPaciente)
                    .addComponent(campoAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoSanguineoPaciente)
                    .addComponent(campoTipoSanguineo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(fumantePaciente)
                .addGap(18, 18, 18)
                .addComponent(alcoolPaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(painelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSalvar)
                    .addComponent(botaoCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelHistorico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelHistorico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        // TODO add your handling code here:
        
        salvar();
        
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void fumantePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fumantePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fumantePacienteActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        // TODO add your handling code here:
        cancelar();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroHistorico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox alcoolPaciente;
    private javax.swing.JLabel alturaPaciente;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JFormattedTextField campoAltura;
    private javax.swing.JFormattedTextField campoCpf;
    private javax.swing.JTextField campoId;
    private javax.swing.JFormattedTextField campoMassa;
    private javax.swing.JTextField campoTipoSanguineo;
    private javax.swing.JLabel cpfPaciente;
    private javax.swing.JCheckBox fumantePaciente;
    private javax.swing.JLabel idHistorico;
    private javax.swing.JLabel massaPaciente;
    private javax.swing.JPanel painelHistorico;
    private javax.swing.JLabel tipoSanguineoPaciente;
    // End of variables declaration//GEN-END:variables

    public void salvar(){
        
        PacienteDAO pDAO = new PacienteDAO();
        HistoricoDAO hDAO = new HistoricoDAO();
        
        boolean check = pDAO.verificaPaciente(campoCpf.getText());
        boolean check2 = hDAO.verificaCpf(campoCpf.getText());
        boolean check3 = hDAO.verificaId(campoId.getText());
        if(!check)
            JOptionPane.showMessageDialog(null, "Digite um CPF válido!");
        else if(check2)
            JOptionPane.showMessageDialog(null, "Este paciente já possui histórico!");
        else if(check3)
            JOptionPane.showMessageDialog(null, "Digite um ID válido!");
        else if("".equals(campoTipoSanguineo.getText()) || "".equals(campoId.getText()))
            JOptionPane.showMessageDialog(null, "Preencha os dados corretamente!");
        else{
            
            Historico h = new Historico(campoId.getText(),campoMassa.getText(),
            campoAltura.getText(),campoTipoSanguineo.getText(), fumantePaciente.isSelected(),
            alcoolPaciente.isSelected(), campoCpf.getText());
            
            hDAO.inserirHistorico(h);
            JOptionPane.showMessageDialog(null, "Histórico registrado com sucesso!");
        }
            
        
        
    }
    
    public void cancelar(){
        
        TelaMain tm = new TelaMain();
        tm.setVisible(true);
        this.dispose();
        
    }



}
